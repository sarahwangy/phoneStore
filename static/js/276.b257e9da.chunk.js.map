{"version":3,"file":"static/js/276.b257e9da.chunk.js","mappings":"qOAKaA,G,OAAiBC,EAAAA,GAAAA,IAAH,qNAWdC,EAAuBD,EAAAA,GAAAA,IAAH,0lCA8BpBE,EAAeF,EAAAA,GAAAA,IAAH,2cAaZG,EAAQH,EAAAA,GAAAA,IAAH,igCAOdC,GAUSG,EAAUJ,EAAAA,GAAAA,IAAH,wJAMPK,EAAgBL,EAAAA,GAAAA,IAAH,2OAQtBC,GAKSK,EAAYN,EAAAA,GAAAA,IAAH,iPAaTO,EAAQP,EAAAA,GAAAA,IAAH,uRAaLQ,EAAWR,EAAAA,GAAAA,IAAH,kdAajBC,GAKSQ,EAAcT,EAAAA,GAAAA,OAAH,iiCAiBpBC,G,2BCzIW,SAASS,EAAiBC,GACvCC,QAAQC,IAAIF,EAAO,aAEnB,IACQG,GADiBC,EAAAA,EAAAA,MAAjBC,aACAF,UACR,GAAmCG,EAAAA,EAAAA,MAA3BC,EAAR,EAAQA,YACAC,GADR,EAAqBC,UACKF,EAAlBC,eAGR,OACE,iCACE,eACEE,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,QACZC,aAAc,QALlB,2BAUA,SAAC1B,EAAD,UACGY,EAAMe,SAASC,KAAI,SAACC,GAEnB,OADAhB,QAAQC,IAAI,cAAee,IAIzB,+BACE,SAAC3B,EAAD,WACE,UAACG,EAAD,YACE,UAACF,EAAD,YAEE,SAAC,KAAD,CACE2B,GAAE,kBAAaD,EAAQE,IAEvBT,MAAO,CAAEU,eAAgB,OAAQC,OAAQ,aAH3C,UAKE,SAAC7B,EAAD,CAAO8B,IAAKL,EAAQM,IAAKC,IAAKP,EAAQQ,SAHjCR,EAAQE,KAOf,SAACrB,EAAD,CACE4B,SAAUT,EAAQU,OAClBC,QAAS,WACPzB,EAAUc,EAAQE,IAClBX,EAAcS,EAAQE,KAJ1B,SAOGF,EAAQU,QACP,oCAEA,SAAC,MAAD,CAAqBjB,MAAO,CAAEW,OAAQ,eAK5C,UAAC3B,EAAD,YACE,SAACC,EAAD,UAAYsB,EAAQQ,SACpB,UAAC7B,EAAD,iBAAWqB,EAAQY,aAErB,UAAChC,EAAD,eAAYoB,EAAQa,0B,eC5EzBC,EAAiB1C,EAAAA,GAAAA,IAAH,4FCGZ,SAAS2C,IACtB,IACQjB,GADiBkB,EAAAA,EAAAA,MAAjBC,aACAnB,SAEAoB,GADmBF,EAAAA,EAAAA,MAAnBG,eACAD,kBAMR,IAJAE,EAAAA,EAAAA,YAAU,WACRF,MACC,MAECpB,EAASuB,QAAU,GAIvB,OACE,SAACP,EAAD,WACE,SAAChC,EAAD,CAAkBgB,SAAUA","sources":["components/productComponent/style.jsx","components/productComponent/index.jsx","pages/proList/style.jsx","pages/proList/index.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport breakpoint from \"../../breakpoints\";\n\n//\n\nexport const ProductWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n  flex-direction: row;\n  flex-wrap: wrap;\n  // box-size: border-box;\n  margin: 0 300px;\n`;\n\nexport const ListComponentWrapper = styled.div`\n  box-sizing: border-box;\n  cursor: pointer;\n  // line-height: 20px;\n  // margin: -1px -1px;\n  // overflow: hidden;\n  margin: 10px 10px;\n  background-color: white;\n\n  // height 宽度不用写固定，后期可以调整\n  // height: 400px;\n  display: block;\n  border: 1px solid lightgray;\n  border-radius: 10px;\n\n  //  多个hover 怎么写/???\n  // &: hover, &:hover 中间加空格 和不加，区别很大！！\n  &:hover {\n    box-shadow: 5px 5px 5px 5px gray;\n    transition: all 0.5s ease-in-out;\n    // 可以一直解构，直到找到最下面最想要的div，但是这样太麻烦\n    // 可以用 style component 特有的 hover 叠加方法：https://styled-components.com/docs/advanced#referring-to-other-components\n\n    // div div div {\n    //   box-shadow: 5px 5px 5px 5px red;\n    //   transition: all 0.5s ease-in-out;\n    // }\n  }\n`;\n\nexport const ImageWrapper = styled.div`\n  // 这个是 cart小车的父类，小车包在了 imagewrapper 里面，这样一开始可以隐藏起来\n  // 当hover的时候，会出现向左向上的移动\n  overflow: hidden;\n  position: relative;\n\n  width: 180px;\n  margin: 0 auto;\n  height: 200px;\n  padding: 10px;\n  background: #fff;\n`;\n\nexport const Image = styled.img`\n  height: 190px;\n  width: 165px;\n  margin-right: 10px;\n\n  //  style components 写hover的方法，表示在点击ListComponentWrapper 下， 图片也发生变化\n  // 这种写法只适合 父子类 的 效果。。。， 不是父子不起效果。\n  ${ListComponentWrapper}:hover & {\n    // transform: translateY(-5%);\n    // height: 200px;\n    // width: 180px;\n    // 如果hover的时候，图片大小变化用width，height表示这会影响下面的高度，下面的图片会闪动\n    // 所以可以用 scale 缩放表示，只是缩放图片大小，并不改变图片的width，height，所以下面图片不晃动\n    transform: scale(1.1);\n  }\n`;\n\nexport const Content = styled.div`\n  // width 宽度不用写固定，后期可以调整\n\n  // border: 1px solid red;\n`;\n\nexport const BottomWrapper = styled.div`\n  border-top: 1px solid lightgray;\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  justify-content: space-between;\n\n  ${ListComponentWrapper}:hover & {\n    background-color: lightgray;\n  }\n`;\n\nexport const ListTitle = styled.div`\n  text-align: left;\n  max-height: 58px;\n  max-width: 232px;\n  overflow: hidden;\n  margin-bottom: 15px;\n  color: #000000d9;\n  font-size: 15px;\n  margin: -3.8px 0 5px;\n  font-weight: 500;\n  line-height: 58px;\n`;\n\nexport const Price = styled.div`\n  margin: 0 0 5px;\n  color: #333333;\n  font-style: italic;\n\n  // width 宽度不用写固定，后期可以调整\n  // width: 232px;\n  height: 20px;\n  font-size: 20px;\n  color: #333;\n  font-weight: 600;\n`;\n\nexport const Category = styled.div`\n  font: 14px;\n  color: #00000066;\n  // width: 232px;\n  height: 20px;\n\n  //  flex很好用，一个元素，父子多个元素都可以用，直接实现放在中间效果\n  padding-bottom: 40px;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n\n  ${ListComponentWrapper}:hover & {\n    background-color: lightgray;\n  }\n`;\n\nexport const CartWrapper = styled.button`\n  color: white;\n  // 美观下的话，可以贴边的地方，没有radius，最上面有radius 弧度\n  border-radius: 9px 0 0 0;\n  font-size: 25px;\n  position: absolute;\n  bottom: -50px;\n  right: -50px;\n  border: none;\n\n  // 可以打开网站，看css 样式调整颜色\n  background-color: #009ffd;\n\n  // position: absolute;\n  // top: 0;\n  // left: 0;\n\n  ${ListComponentWrapper}:hover & {\n    // 当hover的时候，可以向左向上移动。。。第一种方法\n    right: 0px;\n    bottom: 0px;\n    // 添加动画移动速度\n    transition: all 0.5s ease-in-out;\n\n    // 第2种方法，用 x轴移动方向表示，正数是向右向下，负数 - 向上向左\n    transform: translateX(-10px);\n    transform: translateY(-0.5px);\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { BsFillCartCheckFill } from \"react-icons/bs\";\nimport {\n  ListComponentWrapper,\n  Content,\n  BottomWrapper,\n  Price,\n  ListTitle,\n  ImageWrapper,\n  Category,\n  Image,\n  CartWrapper,\n  ProductWrapper,\n} from \"./style\";\nimport { useModalState } from \"../../state-hooks/reducer-hook/modal-hook\";\nimport { useCartState } from \"../../state-hooks/reducer-hook/cart-hook\";\n\nexport default function ProductComponent(props) {\n  console.log(props, \"props com\");\n\n  const { ModalActions } = useModalState();\n  const { openModal } = ModalActions;\n  const { CartActions, CartState } = useCartState();\n  const { addItemToCart } = CartActions;\n\n  // console.log(JSON.stringify(props), \"json string props\")\n  return (\n    <>\n      <h1\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          paddingTop: \"100px\",\n          marginBottom: \"40px\",\n        }}\n      >\n        Our Products\n      </h1>\n      <ProductWrapper>\n        {props.products.map((product) => {\n          console.log(\"product ...\", product);\n          return (\n            // link后 里面的子 div 文字变成了 a 标签 带下划线，用style={{ textDecoration: 'none' }} 可以去除下划线\n            // https://stackoverflow.com/questions/37669391/how-to-get-rid-of-underline-for-link-component-of-react-router\n            <>\n              <ListComponentWrapper>\n                <Content>\n                  <ImageWrapper>\n                    {/* link只放在image 下面，点击image才会跳转detail，而不是包裹在整体contain下面 */}\n                    <Link\n                      to={`/detail/${product.id}`}\n                      key={product.id}\n                      style={{ textDecoration: \"none\", margin: \"10px 20px\" }}\n                    >\n                      <Image src={product.img} alt={product.title} />\n                      {/* cart  可以放在image这里包裹，这样一开始隐藏，后面可以transform改变位置，显示在image旁边*/}\n                    </Link>\n\n                    <CartWrapper\n                      disabled={product.inCart}\n                      onClick={() => {\n                        openModal(product.id);\n                        addItemToCart(product.id);\n                      }}\n                    >\n                      {product.inCart ? (\n                        <p>In Cart</p>\n                      ) : (\n                        <BsFillCartCheckFill style={{ margin: \"5px\" }} />\n                      )}\n                    </CartWrapper>\n                  </ImageWrapper>\n\n                  <BottomWrapper>\n                    <ListTitle>{product.title}</ListTitle>\n                    <Price> $ {product.price}</Price>\n                  </BottomWrapper>\n                  <Category> {product.company}</Category>\n                </Content>\n              </ListComponentWrapper>\n            </>\n          );\n        })}\n      </ProductWrapper>\n    </>\n  );\n}\n","import styled from \"styled-components\";\nimport breakpoint from \"../../breakpoints\";\n\nexport const ProListWrapper = styled.div`\n  background-color: rgba(211, 211, 211, 0.927);\n  margin: 0 auto;\n`;\n","import React, { Component, useEffect } from \"react\";\nimport ProductComponent from \"../../components/productComponent\";\nimport { useProductState } from \"../../state-hooks/reducer-hook/productList-hook\";\nimport \"./style\";\nimport { ProListWrapper } from \"./style\";\n\nexport default function ProductsList() {\n  const { productState } = useProductState();\n  const { products } = productState;\n  const { productActions } = useProductState();\n  const { getListDataReturn } = productActions;\n\n  useEffect(() => {\n    getListDataReturn();\n  }, []);\n\n  if (products.length <= 0) {\n    return;\n  }\n\n  return (\n    <ProListWrapper>\n      <ProductComponent products={products} />\n    </ProListWrapper>\n  );\n}\n"],"names":["ProductWrapper","styled","ListComponentWrapper","ImageWrapper","Image","Content","BottomWrapper","ListTitle","Price","Category","CartWrapper","ProductComponent","props","console","log","openModal","useModalState","ModalActions","useCartState","CartActions","addItemToCart","CartState","style","display","justifyContent","paddingTop","marginBottom","products","map","product","to","id","textDecoration","margin","src","img","alt","title","disabled","inCart","onClick","price","company","ProListWrapper","ProductsList","useProductState","productState","getListDataReturn","productActions","useEffect","length"],"sourceRoot":""}